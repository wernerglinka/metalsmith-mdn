{"version":3,"file":"index.cjs","sources":["../src/index.js"],"sourcesContent":["import path from 'path';\nimport nunjucks from 'nunjucks';\n\n/**\n * @typedef Options\n * @property {String} templatesDir - Directory containing nunjucks templates\n * @property {String} customFilters - Path to custom nunjucks filters file\n */\n\nconst MARKER_START = '{#mdn';\nconst MARKER_END = '#}';\n\n/** @type {Options} */\nconst defaults = {\n  templatesDir: 'layouts',\n  customFilters: 'nunjucks-filters.js'\n};\n\n/**\n * Normalize plugin options\n * @param {Options} [options]\n * @returns {Object}\n */\nfunction normalizeOptions( options ) {\n  return Object.assign( {}, defaults, options || {} );\n}\n\n/**\n * Extract MDN tags from file content\n * @param {object} fileObj - Metalsmith file object\n * @returns {Array} Array of MDN tag objects\n * @description\n *     Extracts all MDN tags from the file content to construct the mdnTagsArray.\n *     Get the name of the MDN component and find the component properties in the\n *     files frontmatter. Push the component properties to mdnTagsArray and when done\n *     return mdnTagsArray.\n */\nfunction getMDNTags( fileObj ) {\n  const mdnTagsArray = [];\n  const str = fileObj.contents.toString();\n\n  // scan for MDN tags in the file content\n  const mdnTags = str.match( /\\{#mdn\\s*\".+?\"\\s*#\\}/g );\n\n  // if the file content contains any MDN tags construct mdnTagsArray\n  if ( mdnTags && mdnTags.length ) {\n    for ( let i = 0; mdnTags.length > i; i++ ) {\n      // get the marker from the file content\n      const marker = str.match( /\\{#mdn\\s*\"(.+?)\"\\s*#\\}/g )[ i ];\n\n      // extract the name of the MDN component\n      const componentName = marker.replaceAll( ' ', '' ).replace( `${ MARKER_START }\"`, '' ).replace( `\"${ MARKER_END }`, '' );\n\n      // find the component properties in the files metadata\n      // `fileObj` should have a property that matches `componentName`\n      if ( fileObj && fileObj.hasOwnProperty( componentName ) ) {\n        // add the marker to the MDNTags array\n        fileObj[ componentName ].marker = marker;\n\n        // push the component properties to mdnTagsArray\n        mdnTagsArray.push( fileObj[ componentName ] );\n      } else {\n        console.log( `A component named ${ componentName } could not be found` );\n      }\n    }\n  }\n  return mdnTagsArray;\n}\n\n/**\n * Render a nunjucks template\n * @param {string} template - Template name\n * @param {object} context - Template context\n * @returns {Promise<string>} Rendered template\n * @description\n *  Render the template with the context and return a promise that resolves to the result.\n *  This is a helper function to avoid the callback function.\n */\nfunction renderTemplate( template, context ) {\n  return new Promise( ( resolve, reject ) => {\n    nunjucks.render( template, context, ( err, result ) => {\n      if ( err ) {\n        reject( err );\n      } else {\n        resolve( result );\n      }\n    } );\n  } );\n}\n\n/**\n * Process a single MDN component\n * @param {object} mdnTagObject - MDN tag configuration\n * @returns {Promise<string>} Rendered component\n * @description\n * Wrapper for the renderTemplate function. This function returns a promise that\n * resolves to the result of the renderTemplate function.\n */\nasync function resolveMDNComponent( mdnTagObject ) {\n  try {\n    const output = await renderTemplate( mdnTagObject.layout, { params: mdnTagObject } );\n    return output;\n  } catch ( err ) {\n    console.error( err );\n    throw err;\n  }\n}\n\n/**\n * Process MDN components in Markdown files using Nunjucks templates.\n * Inspired by MDX - plugin to process nunjucks templates in markdown files.\n * MDN enables the use of Nunjucks in Markdown content. Nunjucks components can be\n * embedded within markdown content.\n *\n * @param {Options} options\n * @returns {import('metalsmith').Plugin}\n */\nfunction MDN( options ) {\n  options = normalizeOptions( options );\n\n  return async function MDN( files, metalsmith, done ) {\n    const debug = metalsmith.debug( 'metalsmith-mdn' );\n    debug( 'Running with options: %O', options );\n\n    try {\n      // Configure nunjucks environment\n      const env = nunjucks.configure( options.templatesDir, { autoescape: true } );\n\n      // Add custom filters\n      const customFilters = await import( path.join( metalsmith.directory(), options.customFilters ) );\n      Object.entries( customFilters ).forEach( ( [ name, filter ] ) => {\n        env.addFilter( name, filter );\n      } );\n\n      // Process each file\n      for ( const [ filename, file ] of Object.entries( files ) ) {\n        const MDNTags = getMDNTags( file );\n\n        if ( MDNTags.length ) {\n          // Process all MDN tags in parallel\n          const resolveMDNTags = await Promise.all(\n            MDNTags.map( async ( mdnTagObject ) => {\n              const replacementString = await resolveMDNComponent( mdnTagObject );\n              return {\n                marker: mdnTagObject.marker,\n                replacement: replacementString\n                  .trim()\n                  .replace( /\\n{3,}/g, '\\n\\n' )\n                  .replace( /^\\s+/gm, '' )\n                  .replace( /\\s+$/gm, '' ),\n                filename\n              };\n            } )\n          );\n\n          // Replace markers with rendered content\n          resolveMDNTags.forEach( ( { marker, replacement } ) => {\n            files[ filename ].contents = Buffer.from( files[ filename ].contents.toString().replace( marker, replacement ) );\n          } );\n        }\n      }\n\n      done();\n    } catch ( error ) {\n      done( error );\n    }\n  };\n}\n\nexport default MDN;\n"],"names":["MARKER_START","MARKER_END","defaults","templatesDir","customFilters","normalizeOptions","options","Object","assign","getMDNTags","fileObj","mdnTagsArray","str","contents","toString","mdnTags","match","length","i","marker","componentName","replaceAll","replace","hasOwnProperty","push","console","log","renderTemplate","template","context","Promise","resolve","reject","nunjucks","render","err","result","resolveMDNComponent","mdnTagObject","output","layout","params","error","MDN","files","metalsmith","done","debug","env","configure","autoescape","path","join","directory","entries","forEach","name","filter","addFilter","filename","file","MDNTags","resolveMDNTags","all","map","replacementString","replacement","trim","Buffer","from"],"mappings":"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"}